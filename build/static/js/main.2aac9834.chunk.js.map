{"version":3,"sources":["App.js","index.js"],"names":["App","canvasRef","React","createRef","html","document","documentElement","onScroll","img","ctx","window","addEventListener","scrollFraction","scrollTop","scrollHeight","innerHeight","frameIndex","Math","min","frameCount","ceil","requestAnimationFrame","index","src","currentFrame","drawImage","updateImage","useEffect","current","getContext","Image","onload","initialFrameSetup","i","preloadImages","toString","padStart","ref","id","width","height","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOA4DeA,G,KAvDH,WACV,IAAIC,EAAYC,IAAMC,YAChBC,EAAOC,SAASC,gBAqBhBC,EAAW,SAACC,EAAKC,GACrBC,OAAOC,iBAAiB,UAAU,WAChC,IAEMC,EAFYR,EAAKS,WACFT,EAAKU,aAAeJ,OAAOK,aAE1CC,EAAaC,KAAKC,IACtBC,IACAF,KAAKG,KA3BQ,IA2BHR,IAEZS,uBAAsB,kBAdN,SAACC,EAAOd,EAAKC,GAC/BD,EAAIe,IAAMC,EAAaF,GACvBb,EAAIgB,UAAUjB,EAAK,EAAG,GAYQkB,CAAYV,EAAa,EAAGR,EAAKC,UAIjEkB,qBAAU,WACR,IACMlB,EADSR,EAAU2B,QACNC,WAAW,MACxBrB,EAAM,IAAIsB,OA3BQ,SAACtB,EAAKC,GAC9BD,EAAIe,IAAMC,EAAa,GACvBhB,EAAIuB,OAAS,WACXtB,EAAIgB,UAAUjB,EAAK,EAAG,IAyBxBwB,CAAkBxB,EAAKC,GAnCH,WACpB,IAAK,IAAIwB,EAAI,EAAGA,EAHC,IAGeA,IAAK,EACvB,IAAIH,OACZP,IAAMC,EAAaS,IAiCzBC,GACA3B,EAASC,EAAKC,KACb,IAEH,IAAMe,EAAe,SAACF,GAAD,gBA/CrB,mIA+CqB,OACJA,EAAMa,WAAWC,SAAS,EAAG,KADzB,SAGrB,OACE,6BACE,4BAAQC,IAAKpC,EAAWqC,GAAG,aAAaC,MAAO,KAAMC,OAAQ,SClDnEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtC,SAASuC,eAAe,W","file":"static/js/main.2aac9834.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\nconst IMAGE_URL =\n  'https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/';\n\nconst App = () => {\n  let canvasRef = React.createRef();\n  const html = document.documentElement;\n  const frameCount = 148;\n\n  const preloadImages = () => {\n    for (let i = 1; i < frameCount; i++) {\n      const img = new Image();\n      img.src = currentFrame(i);\n    }\n  };\n\n  const initialFrameSetup = (img, ctx) => {\n    img.src = currentFrame(1);\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n    };\n  };\n  const updateImage = (index, img, ctx) => {\n    img.src = currentFrame(index);\n    ctx.drawImage(img, 0, 0);\n  };\n\n  const onScroll = (img, ctx) => {\n    window.addEventListener('scroll', () => {\n      const scrollTop = html.scrollTop;\n      const maxScrollTop = html.scrollHeight - window.innerHeight;\n      const scrollFraction = scrollTop / maxScrollTop;\n      const frameIndex = Math.min(\n        frameCount - 1,\n        Math.ceil(scrollFraction * frameCount)\n      );\n      requestAnimationFrame(() => updateImage(frameIndex + 1, img, ctx));\n    });\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    initialFrameSetup(img, ctx);\n    preloadImages();\n    onScroll(img, ctx);\n  }, []);\n\n  const currentFrame = (index) =>\n    `${IMAGE_URL}${index.toString().padStart(4, '0')}.jpg`;\n\n  return (\n    <div>\n      <canvas ref={canvasRef} id='hero-apple' width={1158} height={770} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}